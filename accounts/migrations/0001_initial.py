# Generated by Django 3.0 on 2020-08-05 19:18

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255)),
                ('phone_no', models.CharField(blank=True, max_length=255)),
                ('email', models.EmailField(blank=True, max_length=255)),
                ('message', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Eventregister1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eventtitle', models.CharField(max_length=255)),
                ('targetaudiance', models.CharField(max_length=255)),
                ('eventtype', models.CharField(max_length=255)),
                ('created_on', models.DateField()),
                ('Chairpersons', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('mobilenumber', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('Moderatorname', models.CharField(max_length=266)),
                ('mmobile', models.CharField(blank=True, max_length=255)),
                ('memail', models.EmailField(max_length=254)),
                ('ContactPersonanme', models.CharField(blank=True, max_length=255)),
                ('Cmobile', models.CharField(max_length=255)),
                ('Cemail', models.EmailField(max_length=254)),
                ('organizedby', models.CharField(max_length=255)),
                ('sponserby', models.CharField(blank=True, max_length=255)),
                ('Registerationrequired', models.CharField(max_length=266)),
                ('paymentrequired', models.CharField(blank=True, max_length=255)),
                ('partnerrequired', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='SecurityQuestions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(blank=True, max_length=255)),
                ('answer', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Eventregisterationuser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('header_eventimage', models.ImageField(blank=True, null=True, upload_to='')),
                ('footer_eventimage', models.ImageField(blank=True, null=True, upload_to='')),
                ('streaming_header', models.ImageField(blank=True, null=True, upload_to='')),
                ('streaming_leftpanel', models.ImageField(blank=True, null=True, upload_to='')),
                ('streaming_rightpanel', models.ImageField(blank=True, null=True, upload_to='')),
                ('ticker_content', models.TextField(blank=True, null=True)),
                ('frequency_ticket', models.TimeField()),
                ('count_ticket', models.IntegerField()),
                ('active', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
